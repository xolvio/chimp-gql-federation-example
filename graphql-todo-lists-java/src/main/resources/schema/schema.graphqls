directive @contact(
    "Contact title of the subgraph owner"
    name: String!
    "URL where the subgraph's owner can be reached"
    url: String
    "Other relevant notes can be included here; supports markdown links"
    description: String
) on SCHEMA

schema
@contact(
    name: "FooBar Server Team"
    url: "https://myteam.slack.com/archives/teams-chat-room-url"
    description: "send urgent issues to [#oncall](https://yourteam.slack.com/archives/oncall)."
)
{
    query: Query
    mutation: Mutation
}

type List @key(fields: "id") {
    id: ID!
    name: String!
}

input ListFilterQueryInput {
    partialName: String
}
#
#input PaginationInput {
#    first: Int
#    after: ID
#    last: Int
#    before: ID
#}
#
#type PageInfo {
#    hasNextPage: Boolean!
#    hasPreviousPage: Boolean!
#    startCursor: ID!
#    endCursor: ID!
#}
#type ListEdge {
#    cursor: ID!
#    node: List!
#}
#type ListConnection {
#    edges: [ListEdge]!
#    pageInfo: PageInfo!
#}

type Query {
    Lists(filter: ListFilterQueryInput): [List!]!
#    PagedLists(
#        paginationArgs: PaginationInput!
#        filter: ListFilterQueryInput
#    ): ListConnection!
}

type Mutation {
    RemoveList(listId: ID!): String!
    # @authorized(requires: [ADMIN])
    AddList(listName: String!): List!
    # @authorized(requires: [ADMIN, REGISTERED_USER])
    ChangeListName(listId: ID!, newName: String!): List!
}
